<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.metacoding.red.domain.boards.BoardsDao">

	<select id="paging" resultType="site.metacoding.red.web.dto.response.boards.PagingDto">
		SELECT floor(currentPage/blockCount) blockPage,
		blockCount,
		1+(floor(currentPage/blockCount)*blockCount) startPageNum,
		case when 5+(floor(currentPage/blockCount)*blockCount) > totalPage then
		totalPage
		else 5+(floor(currentPage/blockCount)*blockCount) end lastPageNum,
		totalCount,
		totalPage,
		currentPage,
		decode(currentPage, 0, 1, 0) first,
		decode(currentPage, totalPage-1, 1, 0) last
		FROM
		(
		SELECT 0 blockPage, 5 blockCount, 0 startPageNum, 0 lastPageNum, count(*)
		totalCount, ceil(count(*)/3) totalPage, #{page} currentPage, 0 first,
		0 last
		FROM boards
		)
	</select>

	<insert id="insert">
		INSERT INTO boards(id, title, content, usersId,
		createdAt) VALUES(boards_seq.nextval, #{title}, #{content},
		#{usersId}, sysdate)
	</insert>

	<select id="findById"
		resultType="site.metacoding.red.domain.boards.Boards">
		SELECT id, title, content, usersId, createdAt FROM boards
		WHERE id = #{id}
	</select>

	<select id="findAll"
		resultType="site.metacoding.red.web.dto.response.boards.MainDto">
		SELECT b.id, b.title, u.username FROM boards b
		INNER JOIN
		users u
		ON b.usersId = u.id
		ORDER BY b.id DESC
		OFFSET #{startNum} ROWS
		FETCH NEXT 3 ROWS ONLY
	</select>

	<update id="update">
		UPDATE boards SET title = #{title}, content = #{content}, usersId = #{usersId}, createdAt = sysdate WHERE id = #{id}
	</update>

	<delete id="delete">
		DELETE FROM boards WHERE id = #{id}
	</delete>

</mapper>